<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2017 Redlink GmbH
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.redlink.smarti</groupId>
        <artifactId>smarti</artifactId>
        <version>0.7.4-SNAPSHOT</version>
    </parent>

    <artifactId>smarti-application</artifactId>
    <name>smarti :: Application</name>

    <dependencies>
        <dependency>
            <groupId>io.redlink.smarti</groupId>
            <artifactId>smarti-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.redlink.smarti</groupId>
            <artifactId>smarti-frontend</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-tools</artifactId>
            <version>2.0</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>io.redlink.solrlib</groupId>
            <artifactId>solrlib-embedded</artifactId>
            <version>${solrlib.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.redlink.solrlib</groupId>
            <artifactId>solrlib-standalone</artifactId>
            <version>${solrlib.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
            <version>${solr.version}</version>
        </dependency>

        <dependency> <!-- This only defines abstract processors for actual vocabularies -->
            <groupId>io.redlink.nlp</groupId>
            <artifactId>ner-regex</artifactId>
            <version>${redlinknlp.version}</version>
        </dependency>
        <!-- This also provides an abstract processor that needs to be configured
             against an actual Solr Core with an MLT handler -->
        <dependency>
            <groupId>io.redlink.smarti</groupId>
            <artifactId>keyword-interestingterms</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- Allows to write rules that adds Hints to Tokens -->
        <dependency>
            <groupId>io.redlink.smarti</groupId>
            <artifactId>token-processor</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>io.redlink.smarti</groupId>
            <artifactId>rocket-chat</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>
        
        <dependency>
            <groupId>io.redlink.smarti</groupId>
            <artifactId>chatpal-index</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Analysis -->
        <!-- (1) we need to detect the language -->
        <dependency>
            <groupId>io.redlink.nlp</groupId>
            <artifactId>langdetect</artifactId>
            <version>${redlinknlp.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- (2) OpenNLP for German and English -->
        <!-- dependency> - we prefer Stanford NLP POS tagging
            <groupId>io.redlink.nlp</groupId>
            <artifactId>nlp-opennlp-de</artifactId>
            <version>${redlinknlp.version}</version>
            <scope>runtime</scope>
        </dependency -->
        <dependency>
            <groupId>io.redlink.nlp</groupId>
            <artifactId>ner-opennlp-de</artifactId>
            <version>${redlinknlp.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- dependency>
            <groupId>io.redlink.nlp</groupId>
            <artifactId>nlp-opennlp-en</artifactId>
            <version>${redlinknlp.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.redlink.nlp</groupId>
            <artifactId>ner-opennlp-en</artifactId>
            <version>${redlinknlp.version}</version>
            <scope>runtime</scope>
        </dependency -->
        <!-- (3) StanfordNLP for German and English -->
        <dependency>
            <groupId>io.redlink.nlp</groupId>
            <artifactId>nlp-stanfordnlp-de</artifactId>
            <version>${redlinknlp.version}</version>
        </dependency>
        <!-- dependency> - TODO: Not yet implemented in Redlink NLP
            <groupId>io.redlink.nlp</groupId>
            <artifactId>nlp-stanfordnlp-en</artifactId>
            <version>${redlinknlp.version}</version>
            <scope>runtime</scope>
        </dependency -->
        <dependency> <!-- case correction for German based on caseless POS models -->
            <groupId>io.redlink.nlp</groupId>
            <artifactId>nlp-truecase-de</artifactId>
            <version>${redlinknlp.version}</version>
        </dependency>


        <!-- (4) Stemmer Stopword marking, Negetion Detection -->
        <dependency> <!-- Use the Lucene stemmer variant as the other conflicts with Solrlib -->
            <groupId>io.redlink.nlp</groupId>
            <artifactId>nlp-stemmer-lucene</artifactId>
            <version>${redlinknlp.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.redlink.nlp</groupId>
            <artifactId>nlp-stopword</artifactId>
            <version>${redlinknlp.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.redlink.nlp</groupId>
            <artifactId>nlp-negation</artifactId>
            <version>${redlinknlp.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- (5) Hasso Processors -->
        <dependency>
            <groupId>io.redlink.smarti</groupId>
            <artifactId>hasso-vocabulary-extractors</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- (6) Processors that create Tokens for low level Annotations -->
        <dependency> <!-- FIXME: change module name -->
            <groupId>io.redlink.smarti</groupId>
            <artifactId>pos</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency> <!-- FIXME: change module name -->
            <groupId>io.redlink.smarti</groupId>
            <artifactId>ner</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- (7) Releated Conversation -->
        <dependency>
            <groupId>io.redlink.smarti</groupId>
            <artifactId>query-conversation</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- (8) Solr based Information Retrieval -->
        <dependency>
            <groupId>io.redlink.smarti</groupId>
            <artifactId>query-solr</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- (9) Solr MLP Interesting Terms -->
        <!-- allows to configure external Solr Servier used for MLT queries
             for interesting terms -->
        <dependency>
            <groupId>io.redlink.smarti</groupId>
            <artifactId>keyword-solr-mlt</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- (10) SolrCores for Interesting Terms -->
        <!-- Those require to have the ziped core in a local folder and to
             configure a application property pointing to that file -->
        <dependency> <!-- German Wikipedia -->
            <groupId>io.redlink.smarti</groupId>
            <artifactId>solrcore-wikipedia-de</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency> <!-- Crawl of the DB and DB Systel Webpage -->
            <groupId>io.redlink.smarti</groupId>
            <artifactId>solrcore-crawl-systel</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- END Analysis dependencies -->

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox.version}</version>
        </dependency>

        <dependency>
            <groupId>io.redlink.smarti</groupId>
            <artifactId>smarti-core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.3.6</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.redlink.ext.logback</groupId>
            <artifactId>logback-ext-cloudwatch-appender</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.redlink.ext.logback</groupId>
            <artifactId>logback-ext-jackson</artifactId>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${finalName}-${project.version}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>application.properties</include>
                    <include>application-*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>application.properties</exclude>
                    <exclude>application-*.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <overwrite>true</overwrite>
                </configuration>
            </plugin>            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
                <configuration>
                    <apiSources>
                        <apiSource>
                            <springmvc>true</springmvc>
                            <locations>
                                <location>io.redlink.smarti.webservice</location>
                            </locations>
                            <info>
                                <title>Smarti</title>
                                <version>${project.version}</version>
                                <description>the smart in assistify</description>
                                <contact>
                                    <name>${project.organization.name}</name>
                                    <url>${project.organization.url}</url>
                                    <email>hello@redlink.co</email>
                                </contact>
                                <license>
                                    <name>Apache 2.0</name>
                                    <url>https://www.apache.org/licenses/LICENSE-2.0</url>
                                </license>
                            </info>
                            <securityDefinitions>
                            <securityDefinition>
                                <json>/swagger/security-definition.json</json>
                            </securityDefinition>
                            </securityDefinitions>
                            <modelSubstitute>/swagger/model-substitutes.txt</modelSubstitute>
                            <swaggerDirectory>${project.build.outputDirectory}/META-INF</swaggerDirectory>
                        </apiSource>
                    </apiSources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>list-3rd-party-licenses</id>
                        <goals>
                            <goal>add-third-party</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <fileTemplate>/org/codehaus/mojo/license/third-party-file-groupByLicense.ftl</fileTemplate>
                            <useMissingFile>true</useMissingFile>
                            <useRepositoryMissingFiles>false</useRepositoryMissingFiles>
                            <outputDirectory>${project.build.outputDirectory}/public</outputDirectory>
                            <deployMissingFile>false</deployMissingFile>
                            <failIfWarning>true</failIfWarning>
                            <excludedScopes>test,provided,system</excludedScopes>
                            <excludedGroups>((io|co)\.redlink\..*)</excludedGroups>
                            <excludedArtifacts>stanford-corenlp</excludedArtifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <index>true</index>
                        <manifestEntries>
                            <Loader-Path>BOOT-INF/lib,ext</Loader-Path>
                        </manifestEntries>
                    </archive>
                    <excludes>
                        <exclude>/swagger/**</exclude>
                        <exclude>/application-local.properties</exclude>
                        <exclude>/application-local.yaml</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- repackage -->
                    <classifier>exec</classifier>
                    <mainClass>io.redlink.smarti.Application</mainClass>
                    <layout>ZIP</layout>

                    <!-- jars that requires to be unpacked -->
                    <requiresUnpack>
                        <!-- dependency> - not sure why -
                            <groupId>io.redlink.smarti</groupId>
                            <artifactId>smarti-core</artifactId>
                        </dependency -->
                        <dependency> <!-- for the conversation solr config -->
                            <groupId>io.redlink.smarti</groupId>
                            <artifactId>query-conversation</artifactId>
                        </dependency>
                        <dependency> <!-- for the chatpal solr config -->
                            <groupId>io.redlink.smarti</groupId>
                            <artifactId>chatpal-index</artifactId>
                        </dependency>
                    </requiresUnpack>
                    <!-- GPL licensed, needs to be installed manually -->
                    <excludes>
                        <exclude>
                            <groupId>edu.stanford.nlp</groupId>
                            <artifactId>stanford-corenlp</artifactId>
                        </exclude>
                    </excludes>

                    <!-- build-info -->
                    <additionalProperties>
                        <encoding>UTF-8</encoding>
                        <java.source>${java.version}</java.source>
                        <java.target>${java.version}</java.target>

                        <artifact>${project.parent.artifactId}</artifact>
                        <name>${project.parent.name}</name>
                        <description>${project.parent.description}</description>
                    </additionalProperties>

                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>fetch-solr-core-config</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}/solr-cores</outputDirectory>

                            <overWriteIfNewer>true</overWriteIfNewer>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>query-conversation</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>solrcores</classifier>
                                    <type>zip</type>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>chatpal-index</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>solrcores</classifier>
                                    <type>zip</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archiveBaseDirectory>${project.build.directory}/solr-cores</archiveBaseDirectory>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            com.github.kongchen
                                        </groupId>
                                        <artifactId>
                                            swagger-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [3.1.5,)
                                        </versionRange>
                                        <goals>
                                            <goal>generate</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>full</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <excludes combine.self="override" />
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>